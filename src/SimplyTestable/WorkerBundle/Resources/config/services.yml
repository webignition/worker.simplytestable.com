services:
  simplytestable.services.httpClientService:
    class:  SimplyTestable\WorkerBundle\Services\HttpClientService
    arguments:
        memcacheService: "@simplytestable.services.memcacheService"            
        curlOptions: %curl_options%        
        
  simplytestable.services.webResourceService:
    class:  webignition\WebResource\Service\Service
    calls:
      - [createConfiguration, [{allow-uknown-resource-types: "true", retry-with-url-encoding-disabled: "true", content-type-web-resource-map: %content_type_web_resource_map% }]]     
        
  simplytestable.services.htmlValidatorWrapperService:
    class:  webignition\HtmlValidator\Wrapper\Wrapper 
    
  simplytestable.services.cssValidatorWrapperService:
    class:  webignition\CssValidatorWrapper\Wrapper     
    
  simplytestable.services.nodeJslintWrapperService:
    class:  webignition\NodeJslint\Wrapper\Wrapper 
  
  simplytestable.services.coreApplicationService:
    class:  SimplyTestable\WorkerBundle\Services\CoreApplicationService
    arguments: 
        entityManager: "@doctrine.orm.entity_manager"
        
  simplytestable.services.stateservice:
    class:  SimplyTestable\WorkerBundle\Services\StateService
    arguments: 
        entityManager: "@doctrine.orm.entity_manager"     
        
  simplytestable.services.workerService:
    class:  SimplyTestable\WorkerBundle\Services\WorkerService
    arguments:
        entityManager: "@doctrine.orm.entity_manager"
        logger: "@logger"
        salt: %secret%
        hostname: %hostname%
        coreApplicationService: "@simplytestable.services.coreApplicationService"
        stateService: "@simplytestable.services.stateservice"
        httpClientService: "@simplytestable.services.httpClientService"
        urlService: "@simplytestable.services.urlService"
        
  simplytestable.services.urlService:
    class:  SimplyTestable\WorkerBundle\Services\UrlService     
    
  simplytestable.services.requestservice:
    class:   SimplyTestable\WorkerBundle\Services\RequestService    
    
  simplytestable.controller.action_listener:
    class: SimplyTestable\WorkerBundle\EventListener\BeforeListener    
    arguments:
        logger: "@logger"
    tags:
      - { name: kernel.event_listener, event: kernel.controller, method: onKernelController }  
      
  simplytestable.services.taskservice:
    class:   SimplyTestable\WorkerBundle\Services\TaskService
    arguments:
        entityManager: "@doctrine.orm.entity_manager"        
        logger: "@logger"
        stateService: "@simplytestable.services.stateservice"
        taskDriverFactoryService: "@simplytestable.services.taskdriverfactoryservice"
        urlService: "@simplytestable.services.urlservice"
        coreApplicationService: "@simplytestable.services.coreapplicationservice"
        workerService: "@simplytestable.services.workerservice"
        httpClientService: "@simplytestable.services.httpClientService"

  simplytestable.services.tasktypeservice:
    class:   SimplyTestable\WorkerBundle\Services\TaskTypeService
    arguments:
        entityManager: "@doctrine.orm.entity_manager"        
        
  simplytestable.services.taskdriverfactoryservice:
    class:   SimplyTestable\WorkerBundle\Services\TaskDriver\FactoryService
    arguments:
        drivers: %drivers%  
        container: "@service_container"
        
  simplytestable.services.resque.queueService:
    class:   SimplyTestable\WorkerBundle\Services\Resque\QueueService
    arguments:
      resque: "@bcc_resque.resque"
      environment: "%kernel.environment%"
#      queueManager: "@glit_resque.queue_manager"
      logger: "@logger"
      jobFactoryService: "@simplytestable.services.resque.jobFactoryService"
#      resquePrefix: "%glit_resque.prefix%"
        
  simplytestable.services.resque.jobFactoryService:
    class:  SimplyTestable\WorkerBundle\Services\Resque\JobFactoryService
    arguments:
      jobClassMap: "%resque-job-class-map%"   
        
  simplytestable.services.timecachedtaskoutputservice:
    class:   SimplyTestable\WorkerBundle\Services\TimeCachedTaskOutputService
    arguments:
        entityManager: "@doctrine.orm.entity_manager"

  simplytestable.services.commandService:
    class:   SimplyTestable\WorkerBundle\Services\CommandService
    arguments:
      container: "@service_container"    
      
  simplytestable.services.memcacheService:
    class:   SimplyTestable\WorkerBundle\Services\MemcacheService     